name: E2E Tests

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
  NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}
  TEST_USER_EMAIL: ${{ secrets.TEST_USER_EMAIL }}
  TEST_USER_PASSWORD: ${{ secrets.TEST_USER_PASSWORD }}
  PORT: 3001
  NODE_ENV: production
  CI: true

jobs:
  test:
    name: Run Playwright Tests
    timeout-minutes: 60
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: |
          echo "Verificando versão do Node.js"
          node --version
          echo "Verificando versão do pnpm"
          pnpm --version
          echo "Limpando cache do pnpm"
          pnpm store prune
          echo "Instalando dependências com verbose"
          pnpm install --no-frozen-lockfile --verbose

      - name: Install Playwright browsers
        run: pnpm exec playwright install --with-deps

      - name: Build Next.js app
        run: pnpm build

      - name: Start Next.js app and run tests
        run: |
          # Inicia o servidor em background na porta 3001
          PORT=3001 pnpm start &
          
          # Aguarda o servidor iniciar (aumentado para 60 segundos)
          echo "Aguardando o servidor iniciar..."
          timeout 60 bash -c 'until curl -s http://localhost:3001 > /dev/null; do sleep 2; echo "Ainda aguardando..."; done' || (echo "Servidor não iniciou" && exit 1)
          echo "Servidor iniciado com sucesso"
          
          # Executa os testes com mais detalhes
          DEBUG=pw:api pnpm test:e2e

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: |
            playwright-report/
            test-results/
          retention-days: 30 